PART
{

	// --- general parameters ---

	name = SXTCastor30
	module = Part
	author = NovaSilisko Lack
	
	// --- asset parameters ---

	MODEL
	{
		model = SXT/Parts/Rocketry/Engine/KickMotor/model
		texture = model000 , Squad/Parts/Engine/solidBoosterBACC/model000
		texture = model001 , Squad/Parts/Engine/solidBoosterBACC/model001 //- note: for some reason the normal map isn't working when referenced from the Squad folder.
		texture = model002 , Squad/Parts/Engine/solidBoosterBACC/model002

	}

	scale = 1
	rescaleFactor = 1
	
	// --- node definitions ---

	node_attach = 0.0, -0.625, 0.0, 0.0, 0.0, 1.0
	node_stack_top = 0.0, 0.59483, 0.0, 0.0, 1.0, 0.0, 1
	node_stack_bottom = 0.0, -0.73697, 0.0, 0, -1, 0, 1

	// --- FX definitions ---

	fx_exhaustFlame_yellow_tiny = 0.0, -0.6, 0.0, 0.0, 1.0, 0.0, running
	fx_smokeTrail_light  = 0.0, -0.8, 0.0, 0.0, 1.0, 0.0, running
	fx_exhaustSparks_flameout = 0.0, -0.6, 0.0, 0.0, 1.0, 0.0, flameout

	// --- Sound FX definition ---

	sound_vent_medium = engage
	sound_rocket_hard = running
	sound_vent_soft = disengage
	sound_explosion_low = flameout

	// --- editor parameters ---

	TechRequired = basicRocketry
	entryCost = 3000
	cost = 100
	category = Engine
	subcategory = 0
	title = #LOC.SXT_SXTCastor30_title // #SXTCastor30_title = RT-3 "Gnat" Solid Fuel Booster
	manufacturer = #LOC.SXT_SXTCastor30_manufacturer // #SXTCastor30_manufacturer = Rockomax Conglomerate
	description  = #LOC.SXT_SXTCastor30_description // #SXTCastor30_description = Designed as upper stage motor to kick smaller payloads to orbital velocities, the RT-3 does have a slight habit of kicking things into escape velocities.

	// attachment rules: stack, srfAttach, allowStack, allowSrfAttach, allowCollision
	attachRules = 1,1,1,1,0
	
	// --- standard part parameters ---

	// heatConductivity = 0.04 // 1/3 default
	skinInternalConductionMult = 4.0
	emissiveConstant = 0.5 // yes, it's white. But let's claim it's an emissive white...
	mass = 0.2
	dragModelType = default
	maximum_drag = 0.3
	minimum_drag = 0.2
	angularDrag = 2
	crashTolerance = 7
	maxTemp = 2000 // 2200
	bulkheadProfiles = size1
	stagingIcon = SOLID_BOOSTER
	heatConductivity = 0.06
	tags = #LOC.SXT_SXTCastor30_tags // #SXTCastor30_tags = (gnat moar (more motor rocket srb
	
	// --- solid booster parameters --- 6.75

	MODULE
	{
		name = ModuleEngines

		thrustVectorTransformName = thrustTransform
		throttleLocked = True
		exhaustDamage = True
		ignitionThreshold = 0.1
		minThrust = 0
		maxThrust = 30
		heatProduction = 400
		useEngineResponseTime = True
		engineAccelerationSpeed = 10.0 // 8.0
		allowShutdown = False
		fxOffset = 0, 0, 0.6
		EngineType = SolidBooster
		exhaustDamageDistanceOffset = 0.6
		PROPELLANT
		{
			name = SolidFuel
	       		ratio = 1.0
			DrawGauge = True
		}
		atmosphereCurve
	 	{
			key = 0 250
			key = 1 100
			key = 3 0.001
	 	}
		
	}

	MODULE
	{
	   	name = ModuleAnimateHeat
	   	ThermalAnim = castoranim
	}

	RESOURCE
	{
		name = SolidFuel
		amount = 120
		maxAmount = 120
	}

//	MODULE
//	{
//		name = ModuleTestSubject
//		// nowhere: 0, srf: 1, ocean: 2, atmo: 4, space: 8
//		environments = 15
//		useStaging = True
//		useEvent = False
//	}

	MODULE
	{
		name = ModuleJettison
		jettisonName = solidBooster2_001
		bottomNodeName = bottom
		isFairing = True
		jettisonedObjectMass = 0.01
		jettisonForce = 5
		jettisonDirection = 0 0 1
	}

	MODULE
	{
		name = ModuleSurfaceFX
		thrustProviderModuleIndex = 0
		fxMax = 0.7
		maxDistance = 40
		falloff = 2
		thrustTransformName = thrustTransform
	}

	MODULE
	{
		name = ModuleTestSubject
		useStaging = True
		useEvent = False
		situationMask = 60
		CONSTRAINT
		{
			// disable all but home
			type = SITUATION
			value = 0
			body = _NotHome
			prestige = Trivial
		}
		CONSTRAINT
		{
			// disable all but home
			type = SITUATION
			value = 0
			body = _NotHome
			prestige = Significant
		}
		CONSTRAINT
		{
			type = REPEATABILITY
			value = ALWAYS
			prestige = Trivial
		}
		CONSTRAINT
		{
			type = REPEATABILITY
			value = BODYANDSITUATION
			prestige = Significant
		}
		CONSTRAINT
		{
			type = REPEATABILITY
			value = ONCEPERPART
			prestige = Exceptional
		}
		CONSTRAINT
		{
			type = ALTITUDEENV
			test = GT
			value = 4000
			prestige = Trivial
		}
		CONSTRAINT
		{
			type = ALTITUDEENV
			test = LT
			value = 8000
			prestige = Trivial
		}
		CONSTRAINT
		{
			type = ALTITUDEENV
			test = GT
			value = 2000
			prestige = Significant
		}
		CONSTRAINT
		{
			type = ALTITUDEENV
			test = LT
			value = 4000
			prestige = Significant
		}
		CONSTRAINT
		{
			type = ALTITUDEENV
			test = GT
			value = 1000
			prestige = Exceptional
		}
		CONSTRAINT
		{
			type = ALTITUDEENV
			test = LT
			value = 2000
			prestige = Exceptional
		}
		CONSTRAINT
		{
			type = ALTITUDE
			test = GT
			value = 0 // this just registers altitude as something to care about
			situationMask = 8
		}
		CONSTRAINT
		{
			type = ALTITUDE
			test = LT
			value = 300000
			situationMask = 16
			body = _NotSun
		}
		CONSTRAINT
		{
			type = ALTITUDE
			test = LT
			value = 600000
			situationMask = 32
			body = _NotSun
		}
		CONSTRAINT
		{
			type = SPEED
			test = GT
			value = 0
			situationMask = 8
			prestige = Trivial
		}
		CONSTRAINT
		{
			type = SPEED
			test = LT
			value = 600
			situationMask = 8
			prestige = Trivial
		}
		CONSTRAINT
		{
			type = SPEED
			test = GT
			value = 0
			situationMask = 8
			prestige = Significant
		}
		CONSTRAINT
		{
			type = SPEED
			test = LT
			value = 900
			situationMask = 8
			prestige = Significant
		}
		CONSTRAINT
		{
			type = SPEED
			test = GT
			value = 300
			situationMask = 8
			prestige = Exceptional
		}
		CONSTRAINT
		{
			type = SPEED
			test = LT
			value = 1200
			situationMask = 8
			prestige = Exceptional
		}
		CONSTRAINT
		{
			type = SPEEDENV
			test = LT
			value = 200
			prestige = Trivial
		}
		CONSTRAINT
		{
			type = SPEEDENV
			test = GT
			value = 100
			prestige = Trivial
		}
		CONSTRAINT
		{
			type = SPEEDENV
			test = LT
			value = 100
			prestige = Significant
		}
		CONSTRAINT
		{
			type = SPEEDENV
			test = GT
			value = 50
			prestige = Significant
		}
		CONSTRAINT
		{
			type = SPEEDENV
			test = LT
			value = 50
			prestige = Exceptional
		}
		CONSTRAINT
		{
			type = SPEEDENV
			test = GT
			value = 20
			prestige = Exceptional
		}
	}
}
